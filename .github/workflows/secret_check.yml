name: Check .env Variables in PR

on:
  push:
    branches:
      - '**'
  pull_request_target:
  workflow_dispatch:
    
jobs:
  check-env:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find .env files in PR
        run: |
          # Get list of all .env* files changed in the PR
          ENV_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -E '\.env(\..*)?$' | tr '\n' ':' || true)
          echo "ENV_FILES=$ENV_FILES" >> $GITHUB_ENV
          echo "Found .env files in PR: $ENV_FILES"

      - name: Extract variable names with values
        id: extract_vars
        run: |
          > env-vars-report.txt
          for file in ${ENV_FILES//:/ }; do
            if [ -f "$file" ]; then
              # Extract variable names that have non-empty values
              grep -E "^[A-Za-z_][A-Za-z0-9_]*=.+$" "$file" | cut -d '=' -f 1 >> env-vars-report.txt
            fi
          done

          if [ -s env-vars-report.txt ]; then
            echo "Detected variables with values in .env files:"
            cat env-vars-report.txt
          else
            echo "No variables with values detected. .env files are clean."
          fi

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: env-vars-report
          path: env-vars-report.txt

      - name: Fail PR if any .env variables have values
        run: |
          if [ -s env-vars-report.txt ]; then
            echo "ERROR: Some .env variables have values! Only variable names are allowed in PR."
            exit 1
          fi
