name: Lighthouse CI with appIsReady Check

on:
  push:
    branches:
      - '**'
  pull_request_target:
  workflow_dispatch:

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        formfactor:
          - name: laptop
            width: 1080
            height: 1920
            preset: "desktop"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Gitleaks
        run: |
          # Follow redirects and download the latest release
          curl -sSL -L -o gitleaks.tar.gz https://github.com/zricethezav/gitleaks/releases/latest/download/gitleaks-linux-amd64.tar.gz
          # Extract archive
          tar -xzf gitleaks.tar.gz
          # Move binary to system path
          sudo mv gitleaks /usr/local/bin/gitleaks

      - name: Run Gitleaks
        run: |
          gitleaks detect --source . --report-format sarif --report-path gitleaks-report.sarif

      - name: Upload Gitleaks Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.sarif

      - name: Find project directory with package.json
        id: find_dir
        run: |
          PROJECT_DIR=$(find . -name package.json -exec dirname {} \; | head -n 1)
          echo "PROJECT_DIR=$PROJECT_DIR" >> $GITHUB_ENV
          echo "Found project directory: $PROJECT_DIR"

      - name: Install Lighthouse CI and Dependencies
        run: |
          cd ${{ env.PROJECT_DIR }}
          npm install -g @lhci/cli
          npm install
          npm install puppeteer

      - name: Create .lighthouseci/urls.txt
        run: |
          cd ${{ env.PROJECT_DIR }}
          mkdir -p .lighthouseci
          echo "http://localhost:3000" > .lighthouseci/urls.txt

      - name: Create Lighthouse CI Config with appIsReady check
        run: |
          cd ${{ env.PROJECT_DIR }}
          URLS=$(cat .lighthouseci/urls.txt | jq -R -s -c 'split("\n") | map(select(. != ""))')
          cat > .lighthouserc.${{ matrix.formfactor.name }}.json <<EOF
{
  "ci": {
    "collect": {
      "startServerCommand": "export NODE_OPTIONS=--openssl-legacy-provider && PORT=3000 npm start",
      "url": $URLS,
      "waitForExpression": "window.appIsReady === true",
      "numberOfRuns": 1,
      "settings": {
        "preset": "${{ matrix.formfactor.preset }}",
        "emulatedFormFactor": "${{ matrix.formfactor.name }}",
        "screenEmulation": {
          "mobile": false,
          "width": ${{ matrix.formfactor.width }},
          "height": ${{ matrix.formfactor.height }},
          "deviceScaleFactor": 1,
          "disabled": false
        },
        "throttlingMethod": "simulate"
      }
    },
    "upload": {
      "target": "filesystem",
      "outputDir": "./lhci-report-${{ matrix.formfactor.name }}"
    }
  }
}
EOF

      - name: Run Lighthouse CI Audit
        run: |
          cd ${{ env.PROJECT_DIR }}
          lhci autorun --config .lighthouserc.${{ matrix.formfactor.name }}.json

      - name: Upload LHCI Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lhci-report-${{ matrix.formfactor.name }}
          path: ${{ env.PROJECT_DIR }}/lhci-report-${{ matrix.formfactor.name }}
